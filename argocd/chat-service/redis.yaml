apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: utfsm
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: utfsm
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: utfsm
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: utfsm
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/part-of: utfsm
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            exec:
              command: ["/bin/sh", "-c", "redis-cli ping | grep PONG"]
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/sh", "-c", "redis-cli ping | grep PONG"]
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - name: redisdata
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redisdata
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn-static
        resources:
          requests:
            storage: 128Mi

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: utfsm
  labels:
    app.kubernetes.io/name: chat-service
    app.kubernetes.io/part-of: utfsm
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: chat-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chat-service
        app.kubernetes.io/part-of: utfsm
    spec:
      imagePullSecrets:
        - name: argocd-regcred
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
        - name: api
          image: registry.kroder.dev/library/utfsm-chat-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          securityContext:
            allowPrivilegeEscalation: false
          envFrom:
            - configMapRef:
                name: chat-service-config
            - secretRef:
                name: chat-service-secrets
          readinessProbe:
            httpGet:
              path: /docs
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /docs
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: chat-service

apiVersion: batch/v1
kind: Job
metadata:
  name: chat-service-migrate
  namespace: utfsm
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  ttlSecondsAfterFinished: 120
  backoffLimit: 3
  template:
    spec:
      imagePullSecrets:
        - name: argocd-regcred
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-db
          image: postgres:17-alpine
          command:
            - /bin/sh
            - -c
            - |
              until pg_isready -h ${DB_HOST:-database} -p ${DB_PORT:-5432} -U ${DB_USER:-root}; do echo waiting for database; sleep 2; done
          envFrom:
            - configMapRef:
                name: chat-service-config
            - secretRef:
                name: chat-service-secrets
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: chat-service-secrets
                  key: DB_PASSWORD
        - name: copy-migrations
          image: registry.kroder.dev/library/utfsm-chat-service:latest
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /work/migrations && cp -a /app/db/migrations/* /work/migrations/
          volumeMounts:
            - name: workdir
              mountPath: /work
      containers:
        - name: migrate
          image: migrate/migrate:4
          command:
            - /bin/sh
            - -c
            - |
              /migrate -path=/work/migrations -database postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable up || true
          envFrom:
            - configMapRef:
                name: chat-service-config
            - secretRef:
                name: chat-service-secrets
          volumeMounts:
            - name: workdir
              mountPath: /work
      volumes:
        - name: workdir
          emptyDir: {}

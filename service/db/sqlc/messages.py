# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.29.0
# source: messages.sql
import dataclasses
import datetime
import uuid
from typing import Any, Optional

import sqlalchemy

from db.sqlc import models

COUNT_THREAD_MESSAGES = """-- name: count_thread_messages \\:one
SELECT count(*) FROM messages
WHERE thread_id = :p1
"""


COUNT_THREAD_MESSAGES_NOT_DELETED = """-- name: count_thread_messages_not_deleted \\:one
SELECT count(*) FROM messages
WHERE thread_id = :p1
  AND deleted_at IS NULL
"""


COUNT_USER_MESSAGES = """-- name: count_user_messages \\:one
SELECT count(*) FROM messages
WHERE user_id = :p1
"""


CREATE_MESSAGE = """-- name: create_message \\:one
INSERT INTO messages (
  thread_id, user_id, type, content, paths, created_at, updated_at
) VALUES (
  :p1, :p2, :p3, COALESCE(:p4, ''), :p5, COALESCE(:p6, NOW()), COALESCE(:p7, NOW())
)
RETURNING id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at
"""


@dataclasses.dataclass()
class CreateMessageParams:
    thread_id: uuid.UUID
    user_id: uuid.UUID
    type: Optional[models.Type]
    column_4: Optional[Any]
    paths: Optional[Any]
    column_6: Optional[Any]
    column_7: Optional[Any]


DELETE_MESSAGE_HARD = """-- name: delete_message_hard \\:exec
DELETE FROM messages
WHERE id = :p1
"""


FIND_MESSAGES_BY_CONTENT_LOWER_PREFIX = """-- name: find_messages_by_content_lower_prefix \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE lower(content) LIKE lower(:p1) || '%'
ORDER BY created_at DESC
LIMIT :p2
"""


GET_LATEST_MESSAGE_IN_THREAD = """-- name: get_latest_message_in_thread \\:one
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
ORDER BY created_at DESC, id DESC
LIMIT 1
"""


GET_LATEST_NOT_DELETED_MESSAGE_IN_THREAD = """-- name: get_latest_not_deleted_message_in_thread \\:one
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND deleted_at IS NULL
ORDER BY created_at DESC, id DESC
LIMIT 1
"""


GET_MESSAGE_BY_ID = """-- name: get_message_by_id \\:one
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE id = :p1
"""


GET_MESSAGE_BY_ID_FOR_UPDATE = """-- name: get_message_by_id_for_update \\:one
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE id = :p1
FOR UPDATE
"""


LIST_MESSAGES_BY_CREATED_AT_RANGE = """-- name: list_messages_by_created_at_range \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE created_at >= :p1
  AND created_at < :p2
ORDER BY created_at ASC
LIMIT :p3
"""


LIST_THREAD_MESSAGES_BY_PATH_CONTAINS = """-- name: list_thread_messages_by_path_contains \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND paths @> :p2\\:\\:jsonb
ORDER BY created_at DESC
LIMIT :p3
"""


LIST_THREAD_MESSAGES_BY_TYPE_DESC_BEFORE = """-- name: list_thread_messages_by_type_desc_before \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND type = :p2
  AND (created_at, id) < (:p3, :p4)
ORDER BY created_at DESC, id DESC
LIMIT :p5
"""


@dataclasses.dataclass()
class ListThreadMessagesByTypeDescBeforeParams:
    thread_id: uuid.UUID
    type: Optional[models.Type]
    created_at: Optional[datetime.datetime]
    created_at_2: Optional[datetime.datetime]
    limit: int


LIST_THREAD_MESSAGES_BY_TYPE_DESC_FIRST = """-- name: list_thread_messages_by_type_desc_first \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND type = :p2
ORDER BY created_at DESC
LIMIT :p3
"""


LIST_THREAD_MESSAGES_BY_USER = """-- name: list_thread_messages_by_user \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND user_id = :p2
ORDER BY created_at DESC
LIMIT :p3
"""


LIST_THREAD_MESSAGES_NOT_DELETED_DESC_BEFORE = """-- name: list_thread_messages_not_deleted_desc_before \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND deleted_at IS NULL
  AND (created_at, id) < (:p2, :p3)
ORDER BY created_at DESC, id DESC
LIMIT :p4
"""


LIST_THREAD_MESSAGES_NOT_DELETED_DESC_FIRST = """-- name: list_thread_messages_not_deleted_desc_first \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND deleted_at IS NULL
ORDER BY created_at DESC
LIMIT :p2
"""


LIST_THREAD_MESSAGES_SEEK_AFTER = """-- name: list_thread_messages_seek_after \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND id > :p2
ORDER BY id ASC
LIMIT :p3
"""


LIST_THREAD_MESSAGES_SEEK_BEFORE = """-- name: list_thread_messages_seek_before \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND id < :p2
ORDER BY id DESC
LIMIT :p3
"""


LIST_USER_MESSAGES_SINCE = """-- name: list_user_messages_since \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE user_id = :p1
  AND created_at >= :p2
ORDER BY created_at DESC
LIMIT :p3
"""


RESTORE_MESSAGE = """-- name: restore_message \\:one
UPDATE messages
SET deleted_at = NULL,
    updated_at = NOW()
WHERE id = :p1
RETURNING id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at
"""


SEARCH_THREAD_MESSAGES_FTS = """-- name: search_thread_messages_fts \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND deleted_at IS NULL
  AND to_tsvector('spanish', coalesce(content, '')) @@ plainto_tsquery('spanish', :p2)
ORDER BY created_at DESC
LIMIT :p3
"""


SEARCH_THREAD_MESSAGES_TRGM = """-- name: search_thread_messages_trgm \\:many
SELECT id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at FROM messages
WHERE thread_id = :p1
  AND deleted_at IS NULL
  AND content ILIKE '%' || :p2 || '%'
ORDER BY created_at DESC
LIMIT :p3
"""


SOFT_DELETE_MESSAGE = """-- name: soft_delete_message \\:one
UPDATE messages
SET deleted_at = COALESCE(:p2, NOW()),
    updated_at = NOW()
WHERE id = :p1 AND deleted_at IS NULL
RETURNING id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at
"""


UPDATE_MESSAGE_CONTENT_AND_PATHS = """-- name: update_message_content_and_paths \\:one
UPDATE messages
SET
  content    = COALESCE(:p2, content),
  paths      = COALESCE(:p3, paths),
  updated_at = COALESCE(:p4, NOW())
WHERE id = :p1
RETURNING id, thread_id, user_id, type, content, paths, created_at, updated_at, deleted_at
"""
